{"version":3,"sources":["../../../server/routes/posts/post.model.js"],"names":[],"mappings":";;;;wBAAiC,UAAU;;IAApC,QAAQ;;IAAI,MAAM,aAAN,MAAM;;IAChB,IAAI,WAAQ,cAAc,EAA1B,IAAI;;AAEb,IAAI,UAAU,GAAG,IAAI,MAAM,CAAC;AACxB,aAAS,EAAE;AACP,YAAI,EAAE,IAAI;AACV,mBAAS,IAAI,CAAC,GAAG;KACpB;AACD,SAAK,EAAE;AACH,YAAI,EAAE,MAAM;AACZ,gBAAQ,EAAE,IAAI;KACjB;AACD,WAAO,EAAE;AACL,YAAI,EAAE,MAAM;AACZ,gBAAQ,EAAE,IAAI;KACjB;AACD,WAAO,EAAE;AACL,YAAI,EAAE,MAAM;AACZ,gBAAQ,EAAE,IAAI;KACjB;AACD,kBAAc,EAAE;AACZ,YAAI,EAAE,MAAM;AACZ,eAAO,EAAE,IAAI;KAChB;AACD,QAAI,EAAE;AACF,YAAI,EAAE,MAAM;AACZ,cAAM,EAAE,IAAI;KACf;AACD,YAAQ,EAAE;AACN,YAAI,EAAE,MAAM,CAAC,KAAK,CAAC,QAAQ;AAC3B,WAAG,EAAE,UAAU;KAClB;AACD,YAAQ,EAAE;AACN,YAAI,EAAE,KAAK;AACX,cAAM,EAAE,IAAI;KACf;AACD,WAAO,EAAE;AACL,YAAI,EAAE,OAAO;AACb,mBAAS,KAAK;KACjB;CACJ,CAAC,CAAC;;AAEH,UAAU,CAAC,GAAG,CAAC,MAAM,EAAE,UAAU,IAAI,EAAE;AACnC,QAAM,GAAG,GAAG,IAAI,IAAI,EAAE,CAAC;;AAEvB,QAAI,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,GAAE,IAAI,GAAE,GAAG,CAAC,OAAO,EAAE,CAAC;;AAEjE,QAAG,IAAI,CAAC,cAAc,KAAK,SAAS,IAAI,IAAI,CAAC,cAAc,KAAK,IAAI,EAAC;;AAEjE,YAAM,UAAU,GAAG,qCAAqC,CAAC;;AAEzD,YAAI,OAAO,GAAG,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;;AAE5C,YAAG,OAAO,EAAC;AACP,gBAAI,CAAC,cAAc,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;SACpC,MAAK;AACF,gBAAI,CAAC,cAAc,GAAG,IAAI,CAAC,YAAY,CAAC;SAC3C;KACJ;AACD,QAAI,EAAE,CAAC;CACV,CAAC,CAAC;;iBAEY,QAAQ,CAAC,KAAK,CAAC,MAAM,EAAE,UAAU,CAAC","file":"server/routes/posts/post.model.js","sourcesContent":["import mongoose, { Schema } from 'mongoose';\nimport { meta } from '../../config';\n\nlet PostSchema = new Schema({\n    createdAt: {\n        type: Date,\n        default: Date.now\n    },\n    title: {\n        type: String,\n        required: true\n    },\n    excerpt: {\n        type: String,\n        required: true\n    },\n    content: {\n        type: String,\n        required: true\n    },\n    thumbnailImage: {\n        type: String,\n        require: true\n    },\n    slug: {\n        type: String,\n        unique: true\n    },\n    category: {\n        type: Schema.Types.ObjectId,\n        ref: \"Category\"\n    },\n    keywords: {\n        type: Array,\n        option: true\n    },\n    publish: {\n        type: Boolean,\n        default: false\n    }\n});\n\nPostSchema.pre('save', function (next) {\n    const now = new Date();\n\n    this.slug = this.title.split(' ').join('-') +\"--\"+ now.valueOf();\n\n    if(this.thumbnailImage === undefined || this.thumbnailImage === null){\n\n        const regexImage = /<img[^>]+src=\"?([^\"\\s]+)\"?[^>]*\\/>/g;\n\n        let results = regexImage.exec(this.content);\n\n        if(results){\n            this.thumbnailImage = results[0];\n        }else {\n            this.thumbnailImage = meta.defaultImage;\n        }\n    }\n    next();\n});\n\nexport default mongoose.model('Post', PostSchema);\n"]}